{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/190616-til/","webpackCompilationHash":"94e50647627391f87ddc","result":{"data":{"markdownRemark":{"id":"670fbfba-471d-579a-8ac1-206868aaee8b","html":"<p><img src=\"/media/image-4.jpg\"></p>\n<ul>\n<li><a href=\"https://www.opentutorials.org/course/743/6508\">생활코딩</a></li>\n<li><a href=\"https://www.codecademy.com/catalog/language/javascript\">codeacademy</a></li>\n</ul>\n<p>codeacademy javascript 예제 문제를 풀다가,\n짧은 영어 실력 때문에 도무지 이해가 되지 않은 게 있었습니다.\n바로 콜백함수입니다. </p>\n<p>한국말로 쉽게 설명해둔 ‘생활코딩’을 통해 공부할 수 있었습니다.</p>\n<h2 id=\"콜백함수란\"><a href=\"#%EC%BD%9C%EB%B0%B1%ED%95%A8%EC%88%98%EB%9E%80\" aria-label=\"콜백함수란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콜백함수란?</h2>\n<p>콜백함수는 함수의 성질을 바꾸기 위해 사용한 함수라고 합니다.\n무슨 말일까요? 저도 여러번 읽어봤지만, 명확하게 알아듣기 어려웠습니다.\n예제를 남겨두겠습니다.</p>\n<p>ex 01. 단순한 콜백의 모습</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">a</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i\\'m a.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">b</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>바로 ‘함수 안의 함수’입니다.</p>\n<p>ex 02. 콜백이 왜 생겼는 지 알 게 되는 예제 </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> \n<span class=\"token comment\">// 배열 값의 숫자들을 정리하기 위해 'sort()'를 이용해보겠습니다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// [1, 10, 2, 20, 3, 4, 5, 6, 7, 8, 9]</span></code></pre></div>\n<p>// 예상대로 정리되었나요? 정리되지 않았습니다.\n파일명에 1사진,2사진,10사진이라고 적어보셨나요?\n적어보면 컴퓨터는 1사진, 10사진, 2사진으로 정리해줍니다.\n위의 console.log 결과값처럼 컴퓨터는 왼쪽에서 오른쪽으로 확인하면서\n1이 2보다 작으니까 왼쪽으로 정렬해야지라고 생각하게 됩니다.</p>\n<p>// 이 때 구원 투수처럼 나타나는 게 sort함수의 콜백함수인\narray.sort(sortfunc)를 추가해주면 우리가 원하는대로\n1-20까지의 수를 정리해줍니다.</p>\n<p>-------이처럼 콜백함수는 상위 함수 연산에 또 다른 연산처리가 필요할 때 불려집니다.</p>\n<h2 id=\"콜백함수는-왜-사용하게-되었을까\"><a href=\"#%EC%BD%9C%EB%B0%B1%ED%95%A8%EC%88%98%EB%8A%94-%EC%99%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B2%8C-%EB%90%98%EC%97%88%EC%9D%84%EA%B9%8C\" aria-label=\"콜백함수는 왜 사용하게 되었을까 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콜백함수는 왜 사용하게 되었을까?</h2>\n<p>— 생활코딩의 예를 통해 설명해보겠습니다.  </p>\n<p>콜백함수를 이해하려면 C언어적인 면과 메모리가 어떻게 운영되는 지 알아야합니다.\n하지만 저는 디자이너로 일했고 컴퓨터와 웹이 어떻게 움직이는 지 모두 알기 어려웠습니다.\n그래서 웹 사이트 일부를 예로 들어 이해해보겠습니다.</p>\n<p>생활코딩에서 알려준 예</p>\n<p>만약에 10,000명에게 이메일 1통씩 보내는데 1초씩 들인다면\n10,000초의 시간이 필요합니다. 시간으로 약 3시간이 걸립니다.\n이메일을 보내는데 3시간이 걸린다면 이용할 사용자가 있을까요?</p>\n<p>1통의 이메일당 하나씩 결과값을 만들고 서버에 보내주는 처리를 ‘동기적’처리라고 합니다.\n(휴대폰 저장 내역을 동기화 해보신 적 있으시죠? 데이터 하나-하나-를 받아옵니다.)</p>\n<p>비효율적이고 시간이 많이걸립니다.\n근데 이 때, 10,000명을 관리하는 object와 class 그리고 콜백함수가 준비되어있어\n작업을 할 세팅이 준비되어 있다면 클릭 한 번으로 몇 분안에 처리가 되어 있는겁니다.</p>\n<p>마치 5분 대기조 같은거죠.\n우리가 사이트 메뉴를 누를 때 역시 이미 ‘콜백함수’와 준비된 ‘오브젝트’가 세트로 나옵니다.\n이러한 처리를 ‘비동기처리’ ‘비동기콜백함수’라고 합니다.</p>\n<h2 id=\"이해가-안된다면-예문을-많이-작성해보세요\"><a href=\"#%EC%9D%B4%ED%95%B4%EA%B0%80-%EC%95%88%EB%90%9C%EB%8B%A4%EB%A9%B4-%EC%98%88%EB%AC%B8%EC%9D%84-%EB%A7%8E%EC%9D%B4-%EC%9E%91%EC%84%B1%ED%95%B4%EB%B3%B4%EC%84%B8%EC%9A%94\" aria-label=\"이해가 안된다면 예문을 많이 작성해보세요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이해가 안된다면 예문을 많이 작성해보세요.</h2>\n<p>처음에는 콜백함수의 개념이 잡히지 않다가 예문들을 3시간동안 작성해보니 구조의 윤곽이 보이기 시작했습니다. 제가 연습했던 예제문들을 남겨둡니다. </p>\n<p>백문이불여일타 ^^! 직접 꼭 예제를 작성해보시고 처음부터 다시 한 번 작성해보세요.</p>\n<p>연습 예제 (1)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">cal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mode</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> funcs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'plus'</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">left<span class=\"token punctuation\">,</span> right</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'minus'</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">left<span class=\"token punctuation\">,</span> right</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> left <span class=\"token operator\">-</span> right<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> funcs<span class=\"token punctuation\">[</span>mode<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token function\">cal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'plus'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token function\">cal</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minus'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<p>연습 예제 (2)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> process <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> input <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> input <span class=\"token operator\">*</span> input<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> input <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> input <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> process<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    input <span class=\"token operator\">=</span> process<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"/posts/190616-til/","tagSlugs":["/tag/javascript/","/tag/callback/"]},"frontmatter":{"date":"2019-06-16T22:40:32.169Z","description":"콜백함수는 무엇이고 왜 쓰는가?","tags":["javascript","callback"],"title":"Callback Function 공부하기"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/190616-til/"}}}