{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/190703-til/","webpackCompilationHash":"ab50fd87fdb40b3925e4","result":{"data":{"markdownRemark":{"id":"44328be2-40af-562f-8909-746be3715926","html":"<p><img src=\"/media/image-4.jpg\"></p>\n<h2 id=\"웹이-돌아가는-골격-공부하기\"><a href=\"#%EC%9B%B9%EC%9D%B4-%EB%8F%8C%EC%95%84%EA%B0%80%EB%8A%94-%EA%B3%A8%EA%B2%A9-%EA%B3%B5%EB%B6%80%ED%95%98%EA%B8%B0\" aria-label=\"웹이 돌아가는 골격 공부하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹이 돌아가는 골격 공부하기</h2>\n<ol>\n<li>\n<p>HTML은 문서와 문서를 이동해서 정보를 네트워크로 묶어주려한다.</p>\n</li>\n<li>\n<p>CSS는 화면의 디자인을 담당한다.\n처음에는 HTML 전체 문서 하나마다 CSS 하나씩 주어졌다.\n나중에 HTML 페이지 수가 1000개 정도 되었을 때\n1html에서 준 h2와 정보와 2html에서 준 정보가 부딪힌다.</p>\n</li>\n</ol>\n<p>이로인해 고안된 게 css의 class다.\n그리고 기본적인 버튼 레이아웃은 고정된 값을 지키기 위해 ID를 사용한다.</p>\n<p>하지만 이런 class의 수도 ID값도 점차 늘어 유지보수가 어려워져\nCSS 따로 HTML 따로 관리하게 된다.\n그래서 전체 관리하는 CSS 소스 코드 한 줄을 첨부해 관리를 수월하게 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/css/master.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ol start=\"3\">\n<li>js는 자바스크립트의 약자이다.\njs는 버튼이 눌렸을 때 일어나는\n이벤트 알람, 사용자가 입력하는 값을 받는 역할을 한다.\n한 가지 역할로 축약하기엔 다양한 면이 있지만,\n사용자와 브라우저에서 상호소통하는 기능이다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string\">\"오리\"</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"안녕하세요 \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\"입니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>자바스크립의 변수는 말 그대로 실시간으로\n데이터를 받아 수정하기 위해 생성되었다.\nphp도 변수가 있으며 $표시와 함께한다.</p>\n<ol start=\"4\">\n<li>php가 작동하는 원리는 다음과 같다.\n(차후 이미지를 첨부할 예정)\n웹브라우저는 www.ori.com라고 도메인을 통해\n아이피 주소로 웹서버에게 요청한다.</li>\n</ol>\n<p>웹 서버에서는 php를 요청하는 내용을\nphp문법을 해석할 수 있는 php엔진에게 전달한다.\nphp는 DB에 있는 정보를 데려와서 웹서버에게 보내주고\n웹서버는 웹 브라우저에 보여준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>JavaScript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>CSSS<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>HTML<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>위의 내용은 html이다.\n예를 들기 위해 작성했다. 혼선을 가지지 않도록 기록한다.</p>\n<p>list 안의 내용이 DB에 저장되어 있고\nPHP는 이 내용을 불러온다.\nhtml 하나하나 웹페이지를 만들면 유지보수가 번거로워지고\nphp에서 id를 통해 페이지 전체를 한 번에 운영할 수 있다.</p>\n<p>php와 js의 가장 큰 차이점은\nphp는 서버에게 직접 연산하고 처리한 내용을 보내기 때문에\n개발자 도구에서 php소스가 보이지 않는다는 것이다.</p>\n<p>js는 개발자 코드를 통해 확인할 수 있다.</p>\n<h2 id=\"js와-php-디버깅\"><a href=\"#js%EC%99%80-php-%EB%94%94%EB%B2%84%EA%B9%85\" aria-label=\"js와 php 디버깅 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>js와 php 디버깅</h2>\n<p>js는 크롬 기준으로\nF12를 눌러 console.log창을 통해 에러내용과, 몇 번째 줄에서 일어난 지\n확인할 수 있으며</p>\n<p>php는 서버 폴더 중 logs 폴더에서\nerror.log 파일을 확인하고\n가장 마지막 에러 메세지 내용을 확인한다.\nparse error 내용을 위해 어떤 에러인지 확인할 수 있다\n예를 들면 syntax(문법)에러라던가 확인할 수 있으며\n어떤 표기를 기다리는 지 알려주며 몇 번 째 줄에서 에러가\n발생했는 지 알려준다.</p>","fields":{"slug":"/posts/190703-til/","tagSlugs":["/tag/web/"]},"frontmatter":{"date":"2019-07-03T22:40:32.169Z","description":"how to process to webpage.","tags":["web"],"title":"웹이 돌아가는 골격 html,css,js,php"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/190703-til/"}}}